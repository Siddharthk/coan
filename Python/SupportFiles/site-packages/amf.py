__doc__ = "Approximated media filter; Animation callback example."

from numpy import *
import opticks

def stream(re):
   """Create a streaming callback for AMF."""
   d = re.getData()
   bg = d[0,:,:]
   while True:
      frame = yield
      f = d[frame,:,:]
      tmp = zeros(f.shape)
      tmp[f < bg] = 1
      tmp[f > bg] = -1
      bg = add(bg, f)
      re.newLayer("mask", f - bg, "threshold")

def test():
   """Load a BSQ video file.
      Create a frame based animation.
      Ensure the active animation controller and window are correct.
      h = amf.test()
      Play the animation.
      when done, make sure you: del h
      or you'll see a crash on exit.
   """
   cb = stream(opticks.RasterElement())
   cb.next()
   return opticks.register_animation_callback(callback=cb)
